# import PageInfo from '@/common/graphql/pagination'
# import PaginationInput from '@/common/graphql/pagination'

type User {
  id: ID!
  email: String!
  name: String!
}

# An edge for the User type
type UserEdge {
  node: User!
  cursor: String!
}

# The connection, aka the root type of the pagination.
# https://relay.dev/graphql/connections.htm
type UsersConnection {
  edges: [UserEdge]
  pageInfo: PageInfo
  totalCount: Int
}

enum UsersPaginationCursorAt {
  ID
  CREATED_AT
}

input FindUserInput {
  id: ID
  email: String
}

input CreateUserInput {
  email: String!
  password: String!
  name: String!
}

type Query {
  user(input: FindUserInput): User
  users(
    pagination: PaginationInput
    filters: UsersPaginationCursorAt
  ): UsersConnection
}

type Mutation {
  createUser(input: CreateUserInput!): User
}
